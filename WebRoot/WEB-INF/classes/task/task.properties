#线程池维护线程的最少数量
taskExecutor.corePoolSize = 15
#线程池维护线程所允许的空闲时间
taskExecutor.keepAliveSeconds = 60
#线程池维护线程的最大数量
taskExecutor.maxPoolSize = 200
#线程池所使用的缓冲队列
taskExecutor.queueCapacity = 500

#################################################################################################################
#cron的表达式是字符串，实际上是由七子表达式，描述个别细节的时间表。这些子表达式是分开的空白，代表：
#Cron表达式的格式：秒 分 时 日 月 周 年(可选)
#1.Seconds                 可以用数字0－59 表示
#2.Minutes                 可以用数字0－59 表示
#3.Hours                   可以用数字0-23表示
#4.Day-of-Month            可以用数字1-31 中的任一一个值
#5.Month                   可以用0-11 或用字符串  JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV , DEC表示
#6.Day-of-Week             可以用数字1-7表示（1 ＝ 星期日）或用字符串SUN, MON, TUE, WED, THU, FRI , SAT表示
#7.Year (可选字段) 
#*：任意
#?：表示不确定的值
#,：指定数个值
#-：指定一个值的范围
#/：为特别单位，表示为每 ,如0/15表示每隔15分钟执行一次,0表示为从0分开始, 3/20表示表示每隔20分钟执行一次,3表示从第3分钟开始执行
#?：表示每月的某一天,或第周的某一天
#L：用于每月,或每周,表示为每月的最后一天,或每个月的最后星期几如6L表示每月的最后一个星期五
#W：表示为最近工作日,如15W放在每月(day-of-month)字段上表示为到本月15日最近的工作日
##：是用来指定的,每月第n个工作日,例 在每周(day-of-week)这个字段中内容为"6#3" or "FRI#3" 则表示每月第三个星期五
#例：
#   每隔5秒执行一次：*/5 * * * * ?
#   每隔1分钟执行一次：0 */1 * * * ?
#   每天23点执行一次：0 0 23 * * ?
#   每天凌晨1点执行一次：0 0 1 * * ?
#   每月1号凌晨1点执行一次：0 0 1 1 * ?
#   每月最后一天23点执行一次：0 0 23 L * ?
#   每周星期天凌晨1点实行一次：0 0 1 ? * L
#   在26分、29分、33分执行一次：0 26,29,33 * * * ?
#   每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?
###################################################################################################################
#异常支付订单处理
task.biz.cron.handlePayOrder = */30 * * * * ?

#异常订单处理任务
task.biz.cron.handleOvertime = */30 * * * * ?

#异常退费订单处理
task.biz.cron.handleOrder = */30 * * * * ?

#小额支付银行卡状态处理 
task.biz.cron.handleCardStatusTime = 0 0 0 * * ?

#小额支付银行卡支付受限处理 
task.biz.cron.handleCardPayLimitTime = 0 */1 * * * ?

############################################# 系统采集任务 #######################################
#kafka连接地址 集群用,隔开
kafka.bootstrap.servers =192.168.200.224:9092,192.168.200.225:9092
#consumer的组id
kafka.consumer.group.id=sunshine-log
#主题名称 多个用,隔开
kafka.topics=sunshine-topic
#是否自动提交offset
kafka.enable.auto.commit=false
#自动提交的间隔毫秒
kafka.auto.commit.interval.ms=1000
#连接超时时间
kafka.session.timeout.ms=600000
#key反序列化类
kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#value反序列化类
kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#每次获取的消息数
kafka.consumer.poll.num=100
#topic的分区数
kafka.consumer.partition.num=3